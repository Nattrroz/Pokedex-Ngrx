{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { POKEMON_ENDPOINT_SERVICE } from \"src/app/core/interfaces/services/pokemon/pokemon-endpoint-service.interface\";\nimport { ActionsConstants } from \"../actions/actions-constants\";\nimport { switchMap } from \"rxjs/operators\";\nimport { SetLoadingPokemonAction } from \"../actions/set-loading-pokemon.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\n/**\r\n * Efecto que obtiene la información parcial de un pokemón.\r\n */\nexport class GetPokemonInfoEffect {\n  constructor(_actions$, _pokemonEndpointService) {\n    this._actions$ = _actions$;\n    this._pokemonEndpointService = _pokemonEndpointService;\n    /**\r\n     * Creación del efecto.\r\n     */\n    this.observable$ = createEffect(() => this.execute());\n  }\n  /**\r\n   * Método que ejecuta el efecto.\r\n   */\n  execute() {\n    return this._actions$.pipe(ofType(ActionsConstants.GetPokemonAction), switchMap(action => this._pokemonEndpointService.getPokemon(action.pokemonId).pipe(switchMap(response => {\n      console.log(response);\n      return [new SetLoadingPokemonAction(false)];\n    }))));\n  }\n}\nGetPokemonInfoEffect.ɵfac = function GetPokemonInfoEffect_Factory(t) {\n  return new (t || GetPokemonInfoEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(POKEMON_ENDPOINT_SERVICE));\n};\nGetPokemonInfoEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetPokemonInfoEffect,\n  factory: GetPokemonInfoEffect.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAG7D,SAAiCC,wBAAwB,QAAQ,6EAA6E;AAC9I,SAASC,gBAAgB,QAAQ,8BAA8B;AAE/D,SAAqBC,SAAS,QAAQ,gBAAgB;AACtD,SAASC,uBAAuB,QAAQ,uCAAuC;;;AAG/E;;;AAIA,OAAM,MAAOC,oBAAoB;EAE7BC,YACYC,SAAkB,EAElBC,uBAA+C;IAF/C,cAAS,GAATD,SAAS;IAET,4BAAuB,GAAvBC,uBAAuB;IAGnC;;;IAGA,gBAAW,GAAGT,YAAY,CAAC,MAAM,IAAI,CAACU,OAAO,EAAE,CAAC;EAL9C;EAOF;;;EAIAA,OAAO;IACH,OAAO,IAAI,CAACF,SAAS,CACpBG,IAAI,CACDV,MAAM,CAAmBE,gBAAgB,CAACS,gBAAgB,CAAC,EAC3DR,SAAS,CAAES,MAAM,IAAK,IAAI,CAACJ,uBAAuB,CAACK,UAAU,CAACD,MAAM,CAACE,SAAS,CAAC,CAC9EJ,IAAI,CACDP,SAAS,CAACY,QAAQ,IAAG;MACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAErB,OAAO,CAEH,IAAIX,uBAAuB,CAAC,KAAK,CAAC,CACrC;IAEL,CAAC,CAAC,CAEL,CAAC,CACL;EACL;;AAnCSC,oBAAoB;mBAApBA,oBAAoB,uCAIjBJ,wBAAwB;AAAA;AAJ3BI,oBAAoB;SAApBA,oBAAoB;EAAAa,SAApBb,oBAAoB;AAAA","names":["createEffect","ofType","POKEMON_ENDPOINT_SERVICE","ActionsConstants","switchMap","SetLoadingPokemonAction","GetPokemonInfoEffect","constructor","_actions$","_pokemonEndpointService","execute","pipe","GetPokemonAction","action","getPokemon","pokemonId","response","console","log","factory"],"sourceRoot":"","sources":["C:\\Users\\didie\\Desktop\\pokedex\\pokedex-app\\src\\app\\store\\pokemon\\effects\\get-pokemon-info.effect.ts"],"sourcesContent":["import { Inject, Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { PokemonEndpointService, POKEMON_ENDPOINT_SERVICE } from \"src/app/core/interfaces/services/pokemon/pokemon-endpoint-service.interface\";\r\nimport { ActionsConstants } from \"../actions/actions-constants\";\r\nimport { GetPokemonAction } from \"../actions/get-pokemon.action\";\r\nimport { catchError, switchMap } from \"rxjs/operators\";\r\nimport { SetLoadingPokemonAction } from \"../actions/set-loading-pokemon.action\";\r\nimport { PokemonState } from \"../app-state/pokemon-state.model\";\r\n\r\n/**\r\n * Efecto que obtiene la información parcial de un pokemón.\r\n */\r\n@Injectable()\r\nexport class GetPokemonInfoEffect{\r\n\r\n    constructor(\r\n        private _actions$: Actions,\r\n        @Inject(POKEMON_ENDPOINT_SERVICE)\r\n        private _pokemonEndpointService: PokemonEndpointService,\r\n    ){}\r\n\r\n    /**\r\n     * Creación del efecto.\r\n     */\r\n    observable$ = createEffect(() => this.execute());\r\n\r\n    /**\r\n     * Método que ejecuta el efecto.\r\n     */\r\n\r\n    execute(): Observable<Action>{\r\n        return this._actions$\r\n        .pipe(\r\n            ofType<GetPokemonAction>(ActionsConstants.GetPokemonAction),\r\n            switchMap((action) => this._pokemonEndpointService.getPokemon(action.pokemonId)\r\n            .pipe(\r\n                switchMap(response => {\r\n                    console.log(response)\r\n\r\n                    return [\r\n                        \r\n                        new SetLoadingPokemonAction(false)\r\n                    ]\r\n                    \r\n                })\r\n                \r\n            ))\r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}