{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { GetPokemonTypeBackground, PokemonTypes } from './core/models/enums/pokemon-types.enum';\nimport { DecreaseCounterAction } from './store/counter/actions/decrease-counter.action';\nimport { IncreaseCounterAction } from './store/counter/actions/increase-counter.action';\nimport { GetPokemonAction } from './store/pokemon/actions/get-pokemon.action';\nlet AppComponent = class AppComponent {\n  /**\r\n   * Constructor del componente.\r\n   * @param store Almacén de estados de la aplicación.\r\n   */\n  constructor(store) {\n    this.store = store;\n    this.title = 'pokedex-app';\n    /**\r\n     * Variable contador\r\n     */\n    this.counter = 10;\n    /**\r\n     * Objeto para quitar la suscripción\r\n     */\n    this.unsubscribe = new Subject();\n    /**\r\n     * Tipos de pokemones.\r\n    */\n    this.pokemonType = Object.values(PokemonTypes).filter(value => typeof value === \"string\");\n    /**\r\n     * Color del backgroud obtenido por los tipos de pokemón.\r\n     */\n    this.pokemonTypeBackground = [];\n    this.store.select(x => x.counter).subscribe(counter => this.counter = counter);\n    this.store.select(x => x.pokemon.types).subscribe(type => this.types$ = type);\n  }\n  /**\r\n  * Método que se ejecuta al destruir el componente.\r\n  */\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  /**\r\n   * Incrementa el contador\r\n   */\n  increaseCounter() {\n    this.store.dispatch(new IncreaseCounterAction());\n    this.store.dispatch(new GetPokemonAction(this.counter));\n    this.types$.forEach(element => {\n      this.getPokemonTypeBackground(element.type.name);\n    });\n    console.log(this.pokemonTypeBackground);\n  }\n  /**\r\n   * Decrementa el contador\r\n   */\n  decreaseCounter() {\n    this.store.dispatch(new DecreaseCounterAction());\n    this.store.dispatch(new GetPokemonAction(this.counter));\n    this.types$.forEach(element => {\n      this.getPokemonTypeBackground(element.type.name);\n    });\n    console.log(this.pokemonTypeBackground);\n  }\n  /**\r\n   * Obtiene el background de acuerdo al tipo de pokemón del enumerable.\r\n   * @param pokemonType Clasificación de alerta\r\n   */\n  getPokemonTypeBackground(pokemonType) {\n    this.pokemonType.forEach(type => {\n      if (type == pokemonType) {\n        this.pokemonTypeBackground.push({\n          id: +type,\n          text: GetPokemonTypeBackground.get(pokemonType)\n        });\n      }\n    });\n    return this.pokemonTypeBackground;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n/**\r\n * Clase que incrementa y decrementa el contador padre\r\n */], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","Subject","GetPokemonTypeBackground","PokemonTypes","DecreaseCounterAction","IncreaseCounterAction","GetPokemonAction","AppComponent","constructor","store","Object","values","filter","value","select","x","counter","subscribe","pokemon","types","type","types$","ngOnDestroy","unsubscribe","next","complete","increaseCounter","dispatch","forEach","element","getPokemonTypeBackground","name","console","log","pokemonTypeBackground","decreaseCounter","pokemonType","push","id","text","get","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\didie\\Desktop\\pokedex\\pokedex-app\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, ComponentFactoryResolver } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject } from 'rxjs';\nimport { GetPokemonTypeBackground, PokemonTypes } from './core/models/enums/pokemon-types.enum';\nimport { Types } from './core/models/pokemon/pokemon.model';\nimport { AppState } from './store/app-state/app-state.model';\nimport { DecreaseCounterAction } from './store/counter/actions/decrease-counter.action';\nimport { IncreaseCounterAction } from './store/counter/actions/increase-counter.action';\nimport { CounterModuleState } from './store/counter/app-state/module-state.model';\nimport { GetPokemonAction } from './store/pokemon/actions/get-pokemon.action';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n/**\n * Clase que incrementa y decrementa el contador padre\n */\nexport class AppComponent {\n  title = 'pokedex-app';\n\n  /**\n   * Variable contador\n   */\n  counter: number = 10;\n\n  /**\n   * Objeto para quitar la suscripción\n   */\n  public unsubscribe: Subject<void> = new Subject<void>();\n\n  /**\n   * Tipos de pokemones.\n  */\n  public pokemonType = Object.values(PokemonTypes).filter(\n    (value) => typeof value === \"string\"\n  );\n\n  /**\n   * Tipos de pokemón.\n   */\n  public types$!: Types[];\n\n  /**\n   * Color del backgroud obtenido por los tipos de pokemón.\n   */\n  public pokemonTypeBackground: { id: number; text: string | undefined; }[] = [];\n \n  /**\n   * Constructor del componente.\n   * @param store Almacén de estados de la aplicación.\n   */\n  constructor(private store: Store<AppState>){\n    this.store.select(x => x.counter)\n    .subscribe( counter => this.counter = counter);\n\n     this.store.select(x => x.pokemon.types)\n     .subscribe( type => this.types$ = type);\n  }\n\n  /**\n  * Método que se ejecuta al destruir el componente.\n  */\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * Incrementa el contador\n   */\n  increaseCounter(){\n    this.store.dispatch(new IncreaseCounterAction);\n    this.store.dispatch(new GetPokemonAction(this.counter));\n    this.types$.forEach(element => { this.getPokemonTypeBackground(element.type.name)});\n\n    console.log(this.pokemonTypeBackground);\n  }\n\n  /**\n   * Decrementa el contador\n   */\n  decreaseCounter(){\n    this.store.dispatch(new DecreaseCounterAction);\n    this.store.dispatch(new GetPokemonAction(this.counter));\n    this.types$.forEach(element => { this.getPokemonTypeBackground(element.type.name)});\n    console.log(this.pokemonTypeBackground);\n\n  }\n\n  /**\n   * Obtiene el background de acuerdo al tipo de pokemón del enumerable.\n   * @param pokemonType Clasificación de alerta\n   */\n  getPokemonTypeBackground(pokemonType: string) {\n    this.pokemonType.forEach((type) => {\n      if (type == pokemonType) {\n        this.pokemonTypeBackground.push({\n          id: +type,\n          text: GetPokemonTypeBackground.get(pokemonType),\n        });\n      }\n    });\n    return this.pokemonTypeBackground;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}